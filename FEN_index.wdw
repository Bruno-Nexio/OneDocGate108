#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : FEN_index
 major_version : 30
 minor_version : 0
 type : 2
 description : ""
 subtype : 0
window :
 name : FEN_index
 identifier : 0x280a00be0143b633
 internal_properties : HgAAAB4AAAAm2XOTmBbE/ooz2CxLA8CRpXjZLA2J8Ss+i7XGzQHVdBioEhh2RKTpXyN5Y+3dFfVsUe13kDK74w9fEF5nSUGvPFopsYNXZkk1LOQIO9ZO2nGvRy3mLr8/T3Q/6R4+kjthfSBcwinMJRMx8Yp/qGOap730cZhJ7G2S+eAn5avZOgWqPqaXBUnmh0MtPOJv4+T9le5X7aub+WvZXndAHc3RyuYPQVYFO+LTkQMs96b27cWb2JZOxM4E0EZU1X/sasVxe6AXsYrTMoXz8AxR1zZseavd30sqWLRNidTxgIoydEiqxueCGPOzbtwLlcAPUIwtA2dXAzwwHbEvUSSqqn3tqbiXtkeqK/inD9VlI7gnubgH+YNf28PDXhc95J0t5CoQLzO0gepzIlnP5I3kfbCPF3cDOi5p7lsGoqEaEZdXRKvVMG2gYGcYk0u/N4ypD+WQpTxX7fMnW4YZoPmcSiIl8SMfI10y7uUsxthJIl9WQtJjCBglrCWn8AtOvCBS4hyZrfKQa6tq70Hh4KHF0pJjkH4NS45zR5CZ4cBjbiKUMwhMB+M57KJjFb8xM8k5oTluRgP5/orjPS7CVIU6+er9XXwYeCh/hocqDay3PPEzyuLuIhpXnAlOlfbceQzPiDP5keR8C7Z+e9ydMc57g01yjnDV/cPmqkrQmgcgKzFP
 properties :
  width : 1024
  height : 768
  widthClient : 1022
  heightClient : 736
 style : {}
 controls :
  -
    name : BTN_getLastChangeID
    identifier : 0x280a01b901978897
    internal_properties : HgAAAB4AAADzpVMLXcmcFTqzUgUxzK4dwoRjyRh26Qbs2RamMrcEbo6skk2jM5iXgcQI9EEgZjLSmGAMzDL7Q+nhgKv0gEMxqIt7cHfhw/PNu7hZjFiVnMwXq5w7xBaW1mqgGRM437MSZVC+TDPi67emHsxxHdo7NoqIuHobEKP5N5kiKE4P9SEU7YeQ3EaWXWnz4xUJLZs9f+UaoELbKMGGp+YtI8Szr5kngimR6+AonhTMh6WwSBdueBQgxPItXXcCzgTAq0g5sXYm/T3sNgxmMlU5vPwsj6a9u7VnuJjEOz94/rWLH/A62UvbNfaK4SovYSK55/6e/KiuwRbHxX6tuC5SmUxdc7tPqo8g55e/S6BCdE4rxaBx6lxkOa87rTQHNfqZLOruB3iOOkcpC5b4cZ1NmDxSiMWN0MQda2PB54SnPI6/L36HAYudVaZsm8XzcWgq5TNyO9e76RBrs74MGaoM0qUJDMKLYMgSolTkC9iBWtLmVY1Q3PJSnsZqjpUIpp1ac3f29kTwSvE1cQTcyVR7BXXungfQsjeC47O3pZS8rVbZ9DBcETj7KXCMjJq4Y2zgw69w5K323shDa+EHjQoZF/thzB6dhWj+qs+PrbrtMrMNr0aI+1ZFKzwA1rZ27ua0g9AGdM8vQKFF01CMsYBfttOwj1Erzp8eHm+k8jCKeVr9og08nkP5ItNzTTmIlElLwgbwwj/RU7Cb2ejw+YLdQaWIxsALXTGJxnyIQr4zHKTiA2ChFdLdjHB4pfT+LbBbcRM4YDecVVve5srM5JHemDYPH+1nyqWcK7vPsKEqJzkGke4nejqAmFY+QA3jFk3FZ1k4ML1aOIkrdnmVivEuHLsRkizwzXtKHTPTJM+pG1IHaneeyPGu5qpdjsoGZHS9FH8Mz4wt9f5tnQHCNPc33W2aufFbbG4whalT
    properties :
     x : 22
     y : 37
     width : 102
     height : 24
     accelerator_key : 65535
     tab_order : 0
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         cMaRequête est un httpRequête
         cMaRequête.URL						= "https://onedoc.nexapi.ch/events/last-change-id" ///15264615
         cMaRequête.Entête["Authorization"]	= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" //winlogie
         cMaRéponse est un httpRéponse = HTTPEnvoie(cMaRequête)
         SI ErreurDétectée ALORS
         	Erreur(ErreurInfo(errComplet))
         SINON
         
         	Trace(cMaRéponse.Contenu)
         
         FIN
        type : 18
      -
        type : 161
        enabled : false
  -
    name : BTN_changes
    identifier : 0x280a040201f775cf
    internal_properties : HgAAAB4AAAD+wIBWcdW7yEpyCbnxc79x7quiDxLmoQfZmN0OygdUj9i+y8eatgDANp3UK0R/dxtDDzV/QJIpSxI+Edb2H0sozvdw+svL+S1PEzFfqY+/tYa8lIj5t2uU0+wgiDk3JQLVtRb7axmEalbT+Iw/W68Rwwr1ewf6ICkuxZbszA22tKSBNYRKzWi/iXXSMVRw3trANRVJSWxh2/t/KvOY+c0ZWo9NMMcmTqMc6Z+xYZ5A69ph/Jj47cIMXJy7rY9jhptep9UkQ/v4IUHtjOPwbscDq4dBQ1oeJIm3A6i7zTkHauFcDk4E7V3elt3RqP5NrdRWg4nGLUgwhA6UdJ6k2ToOod8GHB1TsfN8B4En3Crd+msMqU121Ua5Bfce51iANC7Q2zPNq14kj5fyeR6CcpEaKois780TC3KGiOYwFLtkX5YJgV8J58W46yT7t8+tVEVZUk8ApPv0UifORDoOcq+aO7oFfY2n4t6xUuUyf+ofcMR4t51pwjs2tYJr6zSTe07QtWY/UggBXsigCf6gWocH/zEidv4QaDsxzRfsm42HOq277rsq90jG5Wtrxdw9FT8c6F2m3GrtEI2M4130aaDi/wsG111ZElHvgi0hRoiolMqPHvEWfkeTBtf43G0vQtoj2ePkijT+02TQoIXe8mKpG2F37rvvZN4tSYAO3G/BPen6tKkX/zJOu2+a5gZoNPWrgFBQhRURpRE90IrT35uK1yCjqFKFFxU+y4XquyBI+htOyFgeicSrSUgofPzzaxa0EeAA6iy5RpI7ouILvA7ln6XJXRTcxMkFABcmLK3MEjrQ69L9x8pZVNX3G7yi05o5PgJEDi92XzXsc8ksksesLmQNFbL8BMZ7EUzaNFc8I2K02/1QxdcQWEYGxCz7SQbMu9z3u5DawvfQbaIGpbfwzd9WQiVw0XLb64sEVw2jlGotob4goOM=
    properties :
     x : 22
     y : 78
     width : 102
     height : 24
     tab_stop : 0
     accelerator_key : 65535
     tab_order : 1
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1-
         /*
         Scripte synchronisation OneDoc vers Winlogie avec gestion du lastInsertId dans la base de registre<§cs:10§>
         */
         
         // ON RECUPERE LE CHANGEID DE LA BASE DE REGISTRE
         bTestLecture est un booléen
         sValeurLue		est une chaîne
         
         
         // Ecriture dans la clé "Test" de la valeur "mon test" dans "variable chaîne"
         SWITCH SAI_afterChangeId
         	CASE "":
         		sValeurLue = RegistreLit(sCheminRegistre,"changeId",bTestLecture)
         	OTHER CASE
         		sValeurLue = SAI_afterChangeId
         END
         
         cMaRequête is httpRequest
         cMaRequête.URL						= "https://onedoc.nexapi.ch/events/changes?afterChangeId=" + sValeurLue
         cMaRequête.Header["Authorization"]	= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // TOKEN WINLOGIE
         cMaRéponse is httpResponse = HTTPSend(cMaRequête)
         
         if ErrorOccurred then
         	Error(ErrorInfo(errFullDetails))
         else
         	switch cMaRéponse.StatusCode
         		case 200
         			js is JSON = cMaRéponse.Content
         			// ON BOUCLE SUR LE TABLEAU RETOUR LE member.calendarId DONNE LE PRATICIEN
         			FOR EACH member of js
         				switch member.action
         					case "created":
         						// On va chercher les détails de l'évènemet à partir du eventId et d'abord on va gérer le patient
         						route = "/calendars/" + member.calendarId + "/events/" + member.eventId
         						jsResult is JSON = getRequest(route).Content
         
         						switch getRequest(route).StatusCode
         							case 200
         								// ON REGARDE SI LE PATIENT EXISTE ET SI OUI ON RECUPERE SON FICLEUNIK
         
         								fic_cleunik is int
         								REQ_checkIfPatientExists._nom		= Upper(jsResult.patient.lastName)
         								REQ_checkIfPatientExists._prenom		= Upper(jsResult.patient.firstName)
         								REQ_checkIfPatientExists._datnais	= StringDelete(jsResult.patient.birthDate,"-")
         
         								if HExecuteQuery(REQ_checkIfPatientExists) = False then
         									Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         									return
         								else
         									// -------------------------------- GESTION DU PATIENT
         									switch REQ_checkIfPatientExists.FICLEUNIK
         										case 0: // LE PATIENT N'EXISTE PAS ON L'INSERT ET ON RECUPERE LE FICLEUNIK
         
         											// --------------------------------------------------- IL N'EXISTE PAS DONC ON INSERT LE PATIENT
         											REQ_createPatient.titre		= jsResult.patient.gender = "male"? "Monsieur" else "Madame"
         											REQ_createPatient.nom		= Upper(jsResult.patient.lastName)
         											REQ_createPatient.prenom	= Upper(jsResult.patient.firstName)
         											REQ_createPatient.datnais	= StringDelete(jsResult.patient.birthDate, "-")
         											REQ_createPatient.sexe		= jsResult.patient.gender = "male"? "M" else "F"
         											REQ_createPatient.email		= jsResult.patient.email
         											REQ_createPatient.tel_port	= jsResult.patient.mobilePhoneNumber
         											REQ_createPatient.adresse	= jsResult.patient.address.street + " " + jsResult.patient.address.streetNumber
         											REQ_createPatient.cdpost	= jsResult.patient.address.zipCode
         											REQ_createPatient.ville		= jsResult.patient.address.city
         											REQ_createPatient.cleinterv = member.calendarId // Attribution du patient à un médecin
         
         											if HExecuteQuery(REQ_createPatient, hCheckIntegrity + hCheckDuplicates) = False then
         												Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         												return
         											else
         												fic_cleunik = SQL.IDAuto
         											end
         
         										case <> 0: // LE PATIENT EXISTE ET ON RECUPERE SON FICLEUNIK
         											fic_cleunik = REQ_checkIfPatientExists.FICLEUNIK
         									end
         									// ----------------------------------- PUIS INSERTION DU RDV MAIS ON VERIFIE SI LE RDV N'EST PAS PRESENT DANS LINKS
         
         									route = "/calendars/" + member.calendarId + "/external-event-links/eventId/" + member.eventId
         									resp is httpResponse = getRequest(route)
         
         									SWITCH resp.StatusCode
         										CASE 404:
         											Prat is int	= member.calendarId
         											HChangeDir("RDV", "Prat" + Prat)
         
         											UNIC	is string	= NumToString(Val(fic_cleunik),"010d")+Left(Replace(jsResult.startDateTime,["-","T",":"],""),12)
         											HDEB	is Time		= StringToTime(Right(jsResult.startDateTime,8))
         											HFIN	is Time		= StringToTime(Right(jsResult.endDateTime,8))
         											CADATE	is Date		= StringDelete(jsResult.startDateTime,"-")
         
         											// UNIC EST UNIQUE ET EST COMPOSE DU FICLEUNIK ET DE LA DATE DU RDV SUR 22 CARACTERES
         											REQ_checkIfAppointmentExists.UNIC = UNIC
         
         											IF HExecuteQuery(REQ_checkIfAppointmentExists) = False THEN
         												Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         												RETURN
         											ELSE
         
         												SWITCH REQ_checkIfAppointmentExists.RDCLEUNIK
         													CASE 0: //  LE RDV N'EXISTE PAS
         
         														// ------------------------------- IL N'EXISTE PAS DONC ON INSERT LE RDV
         														REQ_insertAppointment.FICLEUNIK		= fic_cleunik
         														REQ_insertAppointment.NOM			= Upper(jsResult.patient.lastName)
         														REQ_insertAppointment.PRENOM		= Upper(jsResult.patient.firstName)
         														REQ_insertAppointment.RAISRDV		= "OneDoc"
         														REQ_insertAppointment.CADATE		= CADATE
         														REQ_insertAppointment.HDEB			= HDEB
         														REQ_insertAppointment.TYPRDV		= "Médical"
         														REQ_insertAppointment.HFIN			= HFIN
         														REQ_insertAppointment.DUREE			= IntegerToTime(Abs(TimeDifference(HDEB, HFIN)))
         														REQ_insertAppointment.LIEU			= 1
         														REQ_insertAppointment.ABSENCE		= 3 // SI CADATE ET HDEB > date et heure du jour ALORS 3 SINON 1
         														REQ_insertAppointment.CLEINTERV		= Prat
         														REQ_insertAppointment.CODEPRAT		= Prat
         														REQ_insertAppointment.FORMTET		= "ONEDOC"
         														REQ_insertAppointment.UNIC			= UNIC
         
         														IF HExecuteQuery(REQ_insertAppointment, hCheckDuplicates) = False THEN
         															Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         															RETURN
         														ELSE
         															// PUIS ON INSERT LA CORRELATION eventId -> rdcleunik (externalId)
         															// Ainsi que le Int_doctolib
         															insertedID is int = SQL.IDAuto
         															REQ_insertInt_Doctolib.unic		= UNIC
         															REQ_insertInt_Doctolib.cleinterv = Prat
         															REQ_insertInt_Doctolib.absence	= 3
         
         															IF HExecuteQuery(REQ_insertInt_Doctolib) = False THEN
         																Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         																RETURN
         															ELSE
         
         																Trace("Int_Doctolib")
         
         															END
         
         															link is string = [
         																{
         																"externalId": "%1",
         																"eventId": "%2"
         																}
         															]
         
         															link	= StringBuild(link,insertedID, jsResult.id)
         															route	= "/calendars/" + member.calendarId + "/external-event-links"
         															statusCode is string = postRequest(route, link).StatusCode
         
         															SWITCH statusCode
         																CASE 201:
         																	Trace("RDV inséré")
         																CASE 500:
         																	Trace("Pas youpi")
         															END
         
         														END
         												END
         											END
         									END
         								end
         							case 404
         //								Trace( "Not Found")
         						end
         					case "updated":
         
         //						 UPDATE UN RDV QUI VIENT DE ONEDOC. 1- ON VA CHERCHER LA CORRELATION eventId -> externalId
         						route = "/calendars/" + member.calendarId + "/external-event-links/eventId/" + member.eventId
         						resp is httpResponse = getRequest(route)
         
         						SWITCH resp.StatusCode
         							CASE 200: // ON A UN EXTERNALID DONC ON A UN 200 ET DU COUP ON REQUETE SUR LES DETAILS DU UPDATE
         								// ON RECUPERE LE EXTERNALID (RDCLEUNIK)
         								jsLink est un jsON = resp.Contenu
         								rdcleunik est string = jsLink.externalId
         
         								route = "/calendars/" + member.calendarId + "/events/" + member.eventId
         								respEvent est un httpRéponse = getRequest(route)
         								jsResult is jsON = respEvent.Contenu
         
         								// ON MONTE LE REP RDV PAR PRAT
         								HChangeDir("RDV", "Prat" + member.calendarId)
         
         								REQ_getFicleunikByRdcleunik.RDCLEUNIK = rdcleunik
         								IF HExecuteQuery(REQ_getFicleunikByRdcleunik) = False THEN
         									Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         									RETURN
         								ELSE
         									UNIC	is string	= NumToString(Val(REQ_getFicleunikByRdcleunik.FICLEUNIK),"010d")+Left(Replace(jsResult.startDateTime,["-","T",":"],""),12)
         									HDEB	is Time		= StringToTime(Right(jsResult.startDateTime,8))
         									HFIN	is Time		= StringToTime(Right(jsResult.endDateTime,8))
         									CADATE	is Date		= StringDelete(jsResult.startDateTime,"-")
         									DUREE 	is Time		= IntegerToTime(Abs(TimeDifference(HDEB, HFIN)))
         
         									REQ_updateAppointment.UNIC = UNIC
         									REQ_updateAppointment.CADATE = CADATE
         									REQ_updateAppointment.HDEB = HDEB
         									REQ_updateAppointment.HFIN = HFIN
         									REQ_updateAppointment.DUREE = DUREE
         									REQ_updateAppointment.RDCLEUNIK = rdcleunik
         
         									IF HExecuteQuery(REQ_updateAppointment) = False THEN
         										Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         										RETURN
         									ELSE
         										Trace("Update")
         										// SYSLOG
         									END
         								END
         							CASE 404:
         								Trace( "Pas de corrélation")
         						END
         
         					case "deleted":
         						//Trace("Suppression, eventId: " + member.eventId)
         						// UPDATE UN RDV QUI VIENT DE ONEDOC. 1- ON VA CHERCHER LA CORRELATION eventId -> externalId
         						route = "/calendars/" + member.calendarId + "/external-event-links/eventId/" + member.eventId
         						resp is httpResponse = getRequest(route)
         
         						SWITCH resp.StatusCode
         							CASE 200:
         								jsResult IS jsON = resp.Contenu
         								REQ_deleteAppointment.RDCLEUNIK = jsResult.externalId
         								IF HExecuteQuery(REQ_deleteAppointment) = False THEN
         									Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         									RETURN
         								ELSE
         
         									route = "/calendars/" + member.calendarId + "/external-event-links/eventId/" + member.eventId
         									resp = deleteRequest(route)
         									SWITCH resp.StatusCode
         										CASE 204:
         											Trace("Lien supprimé")
         										OTHER CASE
         											// SYSLOG
         									END
         								END
         						END
         				end
         				changeId = member.changeId
         			end
         			// ON INSERT LE DERNIER CHANGEID DANS LA BASE DE REGISTRE
         			RegistreEcrit(sCheminRegistre,"changeId",changeId,registreTypeEntier)
         		other case
         			Trace(cMaRéponse.StatusCode)
         	end
         end
        type : 18
      -
        type : 161
        enabled : false
  -
    name : SAI_afterChangeId
    identifier : 0x280a043a020b534e
    internal_properties : HgAAAB4AAAAVeat8A7nlN2ihxBm6jYp522xVzkhHFdMdzIVz+52QIxduQ6KakBHJl5X9c7lxoCMHG7ppvMC+PDKCVJwbCEF7pyFlBjRbvXpM2GiWhAlCXH8O9UhDnkSd7vAGeuqVCM0fVRYAn3RcLOUHn5Kin8M+Toz1To0ij0sctRqxXCRixCBj1KJEdA/2VfLAueFQaBWkp16BK83dB/fueXtXpGzqToKP1tPCKvPhic9K4BiOEBFd3uPChFWDY87/B8hXC8zMBp1KlbiFh7nXn12vk6Zyto9rXnaWljtTBumRkVCoKKb9dFQgL9x2Vtdrc9uFGA2lOCgJrpznaICHxt8Qp5KmX3R3eV9n+Z9KoItEY6NG/2yQGfUeTq2Z+3ZC/Yb7TW1v6R5z5wCZF1YPkj8d3hSYuZIHGsEf+djQPx3ayXgmhYGi2CXHmjQX8yH5uUfSDeFJO4iA192hA1xppUdA6ardfVAU0KJm9E0PClaLNVHUo0KcRDxg8TUOnIjKKrL0pkPCTvP0+rW7tLJSjtT0sSw3lr75+0TubnoeJr1s68/dgXWviG126dg3PpPSgYUteTwh+uVeKn/XRb+Bdrk12XSBwidXZyaN4/nHd0MNcYC18V10cQcxnq1B2mQn2QXHOyPzWkRf7VxjkYcFl4QDoLC8/6Sl0lEiFxuuDnU6llMWkPkIudoJ/RfixOqgUg0574JJiOFpe8HEfKXTvLVrAgpZZm+rWY+35dDF/FeABYbZAHnF0Ka6nUE/COh9zFc4kNkZcbXTfdytACVzqZfff/4si4pD9Rl0kHaLpJcWBo+dSAGTvFlXNTLmkEUGU95phDPXVthqHuAzj9af4DBAyYn5bNLFBlO1yiZ9r7aEB0jz0rIxCa8W6P1Q7PPenokaLzny3oLX1i/hJrgQrt7EZtu54xhCwnQ8CFsWH4nXHv57HXFu+MYH/fqenR23MVXGdhaY1T6t9peAflivXDVFjvsdM8yiAf/fa/malFdrkE28Gbpxc9vTQPhrUj4i09PMv3+4kS7MuA0XkRD6/2yjmef/dSKaivI3DfOJ1WUEeSUv//Oq0q3MttsGGm7g/EntVCkRs6Aft342u1AF52WeegW5ZoECJL4yE2sw40a9K9cfUqggHl0ysDni2DeqCYGylPRaTnsF21KKN3gJj0+NupbiSgnxrfWSFk5aYDrSIyfjAX/jFu/cGgbqJ6zMqBebqrz3qYrcUxN3Laot+gYd9Pul/tdubthV9Neg8CWUhJqF+CipcdSC23T8iTIj7l4E7pvCIBYRSMsQQhgxTNxKtSY0IOUCXmaecTtR1k+DjKaiQ35joPsUL5rYlQfQMuiOC0QN6bMrGe6RL+N/3BaxiSZPRKDWMofHq8FgaFLuqxsHpBbw9k0EEIJDFsnqZKIUhJdIl/UWOieGzauHqi4pg5PgcxRbLdKFh+qZwFY7dJ41gJAE2qg3skwJK/be4rOXnEZ0ijtIjVYuVeYXzTW4WjM6S15TxLbkeNwQOJWU7Nlp2a7Jg6Vo5AF71OvTG2KpdvaLgG59heAJaANXzGi59ZqwY1CgYeVkNka662Ui1oLnUS6ZPASUPNk7UtHwfwdNTZkQ7Vk5pDweqyLQEcbyHDoCSi1Cwm5+CLjC2bPd9KqGq52ESVWxSGTp2ZZMbSgLC7wvQpj86VnU5oL75+Nw8FrlD4TZGaS+BCRQC1bRrwcXciWfmwik9dvS77Kcnm7RneOC1du9Sn7epMpEsjJXlIKG+hNpYvDs3EhlPLj6N00/J7C3iTgfMBsLJxTVP1hBnDTmy8Ucr3i6FsCGeRbf5dtQb04RDs6yNjfLgoyCLHPwX/zLa+lNpFb4KDHvc+D9mcMW1FY9noZwBbWIlLQ7H7ju1WzXl6cmPcD7Aig8LawI3K2hG2J2Er26XbLiRI/LfePR4jxUSvs8/Q==
    properties :
     x : 147
     y : 78
     width : 204
     height : 23
     accelerator_key : 65535
     tab_order : 2
    style : {}
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
      -
        type : 338
        enabled : false
      -
        type : 339
        enabled : false
  -
    name : BTN_events
    identifier : 0x280a0874051cd68a
    internal_properties : HgAAAB4AAABJ6PZJ97qm3tHbZezOjwLmklCOTVN975+D+bJ8g1yleO5qc4zWUaWc2QmRvS5vTiAQZxHF2M6QDwmHvjlmi7oeZh+VLtXbFn4VXepmkZWP8LcyhFzGJKLWlI0q1N8jb72bJiZUpino+08akQDlBq92Snv04HUJw6yWBAZwJODwuR4ZqE5Gw3krTjhTU1dQ3WenOh2du5WGkWAseXQn0aaFBnqSiuBSX926M3BmqHfdi4KX/vyEM7NzIvza+QyOs4hnVb571KAxrVDdjK9jeYAuPfJUhYgihwDXktsbuD6aW+Z2jsShh0S/+4qE3D0nyB95ytURbfIw9fg2ihtPczBsLuv3YGbQXOO1u25VIW2Vt/5oVdhjuOWnyLt7L6nQvCbeWlazv3ZL0H+1VqhfSD0geagGIE7gS24tPz2JvtbBZ6HAuaPv4PSD7hQ4pvfJJF7/OhEZfsEHgHQvoA8FMDZtL2E+1ap2/ALXrC4ylq/PYs5sp0huTroWyzJRuyaI29ObZGNTiDEYAnZ86IPYDSm4529gW5IZI3DZhUTl+OiIzYXE208EkPUrnKQghculZ7ENN4bC5Hmjmg/7EPCPtzPRsAL5OmdKv+E/mljPLixXDET5EPBFh4SNTUwBW+Zz9TYkqu6jnIXeJXfQJ215sJq3dyvx9euv6ZTVngVhcWCVsJZnvp6Scf9svs/jfs7eAsOSXzttjoFhEvY1+bpeFK9HimJYepWdgIP8bVfepYId6Qmktsl69Vnj0cglJVfKcF5VtsadHikAGDMevxkHbQmt33sbz3a79yNk9buXdFp7JnNZiDsa8YqZi60Fh+WMrr0fLaqwqaovHMUcJ+BVjN7jI0PfzOqbchZgPWCyfUDpXiOUNIGOjbRWyNduB6OIkCxHwLb+SEmEs3SDRA1+qFWX+8GTAevP1WifBX/wWiSe
    properties :
     x : 22
     y : 119
     width : 102
     height : 24
     accelerator_key : 65535
     tab_order : 5
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         cMaRequête est un httpRequête
         cMaRequête.URL = "https://onedoc.nexapi.ch/calendars/" + SAI_calendarId + "/events?fromDateTime=2020-06-01T00:00:00&untilDateTime=2020-06-30T23:59:00.00" + SAI_afterChangeId
         cMaRequête.URL = "https://onedoc.nexapi.ch/calendars/" + SAI_calendarId + "/events?fromDateTime=" + SAI_fromDateTime + "&untilDateTime=" + SAI_untilDateTime
         cMaRequête.Méthode = httpGet
         cMaRequête.Entête["Authorization"]	= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // WINLOGIE
         cMaRequête.ContentType = "application/json"
         cMaRequête.Entête["Accept-Encoding"] = "gzip"
         //cMaRequête.ProcédureTrace = ProcTrace
         cMaRéponse est un httpRéponse = HTTPEnvoie(cMaRequête)
         
         si ErreurDétectée alors
         	Erreur(ErreurInfo(errComplet))
         sinon
         	selon cMaRéponse.CodeEtat
         		cas 200
         			i, j			est entier
         			jsevents		est un JSON	= cMaRéponse.Contenu
         			j = jsevents..Occurrence
         
         			pour i = 1 à j
         				Trace(jsevents[i])
         			fin
         		autre cas
         			Trace(cMaRéponse.CodeEtat)
         
         	fin
         
         //	i, j	est un entier
         //	jsevents		est un JSON	= cMaRéponse.Contenu
         //	j = jsevents..Occurrence
         //
         //	POUR i = 1 A j
         //		Trace(jsevents[i])
         //	FIN
         	//Trace(JSONVersChaîne(js,psdMiseEnForme))
         
         //	Trace(cMaRéponse.CodeEtat)
         //	Trace(cMaRéponse.DescriptionCodeEtat)
         //	Trace(cMaRéponse.ContentType)
         //	Trace(cMaRéponse.EntêteBrut)
         fin
         
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : SAI_calendarId
    identifier : 0x280a0894052453a9
    internal_properties : HgAAAB4AAABqoRCqvzjK1sihIcAdynAyJILbL5FrXi1M9CiyfevEObVNf4VC0fd1U/GFXx99ERl/uPprkVwJmNsbJmS7qNdpd7Zn+tcuBBy95f+o1WTj2zSX61xsUJbvCUMZwv0a4r0jpCClq3EzpmRppk75D8wG94wRJi1XGyUJyC1dEJ97xwu7ns6CZR0rGd5+XGHHinPl+dyUH3nKXOBSUAHbQLIQK/nkT26+wpmaphreTtcomkbd6fH4S+6ro0ezteb9FhToQcxgN8oz3n8N+XzLg3rMGPzKaOw+LmA92i6QPXI6WnLK1NgmfBr4yn7gJKsQ22JNjoC9b7GV6gylBo8ZoI1YFm93WM6gYY05v45iU853E5OT1ru0q77rXUWwvO1AmLgrX5WL2gCpeRoiThTxE/RtVgdDrsATZFiw17lCw9Cg2Mm8dtWBL+4IPuhNcE3Q5yXSyInncupxZOKPJ6H5zgoibYQaiqcUwYbVzAJgsguonEhMQh4vYm1KidfJVR2lTtCdvVsgwGjUuxDWiAiSH3K/Q0FDGzqc8dLrJOvwZEjpnwyPa/rqYxCEjv9kKsjjlP2lwxwOxXzG+K/iZmb2Ca0eZtrdD7rngRC7uzjkO8E5VrVRD7ED3CWQpNLPyBYnZR7LZ0NvjfJLdLCi1t/YPxJkBSe9zUUaunIMZCCi3GEvpQnaB/cflQVsEJwgv4KYwUxXWYgGIAlHTgUyla++5VpVijLdptZGzQkLfnl55K+inFbE6BrJGF2WYWjm8DtFGXTyRNn92pD4A1kWOcxsHOBQ7KgmbsdKUTVm8H15FyLsbXhcWnmDFx6avzLgkA7UNjtt7LQ7g59boyEIyNsFnB6/PJPfjcVJNW4c9TVGQTYe8MMCXupdt02cyZ94jl++Q5KP1Ib1QnWxXTfUAGQUpY2ng8b1W5uoy/pcIJO7unw/KF4+r2OZsMyn/3YIp9HXDrSBr9yWXmH6EqyETYmESR2M7eqMqSSggoo8ar2ftdgV1dVVt5S9POm0xazQZqJnlRXaiXc6ccvLjTV4Ufhw1hVsutlZHKfY8GsXWc6vklOFwRmLT6R8EzNWn+pvjr3cGCyq0Z6K3o/hgANW1a73jyziVivJfNcWH3VIGMlMGXO3B+44NVheZ4SakpIhQcW+58yBcuCjk7cSEzm5xaflla/g5DGOiNSgG88oTXmYmUzcNA1ZoR+PAG13pnk27dUltCSZC87swKxpb2v4BGP3hdj87QZ945IvqNol8sKXRGf+B71WhfoToC55S//aWTNg8px+vuGZazSEIOBGGv0gv3DKfA31KJ/L6Msw0DEDd8kJRepZ4GO2WrAjiVcSGlCi/0yds+OEg9gXu6KgfV1dZMuwIwe4GWJStO++fd6r+HzrH84=
    properties :
     x : 147
     y : 119
     width : 204
     height : 23
     accelerator_key : 65535
     tab_order : 6
    style : {}
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
      -
        type : 338
        enabled : false
      -
        type : 339
        enabled : false
  -
    name : SAI_fromDateTime
    identifier : 0x280a08ca052d230f
    internal_properties : HgAAAB4AAADp+BbC/0iwk2FqOyYfsJeHXaegQ5F48ZIPA9IpCtDZED5669fxLPRu7ZSs+W2is1Rd5NNbwk+qSI55KFyzaIoWvsMzkHXoH4dFCFZtszoK2Tki4NvDfYgdAs4U40R2x/ZunNV4dw86y1biwyVabcTzOBmS63AdlCpBzNLpMow7Rd3TyiMzsLNI8qliEwNKXyD0PPtQtEJiqMbP5C50nCIAo6fFoMjYpvtbauHWt6fBpyy/kYVlQc+cpPPJ8j5TO+cY2ePRE4G/7fcH2PbXTRlSKMIGWBkb9jrHJvchmHj1O5qlOUNTkIyz1FhV3D9bK3wEGWnRA6b+XiqklC/WKyfiIbrwKnQ0uv9w9nyfp6W9EgRwLKfHOhrIbUeeZhCz569v6T/ibaQyeI/Had1FQ3lsSUkEn6RrSwL18aosxr+9i9wzRyQ09rlp4Xs8zmQyyDE+ijn1D2qQm1fSpVYEZ2SqwwWyB9Oh8NYzimhhUE2cfHe+cEmWhB9rkiP24iLS/LgAnb80hq+MuSN56ckeXjyd+5YXwD8hTrIlvpxfJlyyyMJLXGj6VEOlWcUgAwXXazeOTjPVfWeW+/1bc+iDkV2NL80seeZorPjmwcY04GvZiZpb4iNpDl8UuU77d2EFu0vL1SOX0gynPtJWZlSVKrSOey5dxqX+Ai9/vV7s7gS6yytQhS0N3bCT4lgghtCe4WgnNCfSXRdCOLfDesWe6kVl/UxNmD0xRdEMqGW/cBIrZtYWRxrmv3/8xEv6nZpLrHsKeAehFBCIFkE+OMRobxLpFcxw+w4GGuB2SzGO65rALn+tc/F+/vguzibsDcViJ/riBS8ALNhfgsNDhkknizZMoawWvF73p2y144fA/X5bSEFSwI1pKoqM3p0xnDt22ljYOXqZihsG+fxHEyMZyacR72uxBDzB5u3VZzHHs8nojd/bmqUAe/OL4emrAcY2GluXYo3uVFc5VBrJmxS8A8ygq31q9S9j2HhIASj3ODvlTmbWHI5MTLKa0qEHcCveFDrJ7tGJx67CAxCpVWlwdyaFf0RIjxKo+S70qYRI3s9R86MCTsziH21CiW425qS7OQcJ+NVo6QRezmptVa1VwMlch5NsnU0/O9wVJ3EEKS7D0c0Gq6E0NEQCAe4UU8xmk04DPvcpymXoxhH1psNOGy5/k+XboJgrbSt3ln/Hbqb+HlpE6fO2hU5Hsq8cgAdS3C/SoEoZv+jIyy//P0sSIQFKiVo5KZ5rkWQmXWYHIzkRZbWCdlOfZ6tYEmj7elHLyodIO4nyzzDW7bZ+cdQBcN4dbXsQDMjwGKtOJTAmLNz5a17ExenYxhfq7OZ1oRHroebwZ2P/CzDzuajOCBFH/Ykr9iUc2CvZGNIDLZ+NKVB4J4LiRikU5Dl3D92kCGIKVIcWbnHsVJFE0VyHbzYYENbNMPphI0/qAfapWTOFgqkOILWevhoV2AipjpVkJMfB2URezUextf6O8jl6G47T1y0HycUrWM8WLqvUi/EDCVPYblDyASMg3HtkkibkrdU4vJ6N2XoCJjNGbujfuSduD+h+u1oisxocvFaFnR97n7+zng0vQf45Q84OfyBlAx6HnlE30a8zfy2hkVy9hA98tNOmECRyXlD+rjwe5MkjdLw7MRElQkxA3YvCxSE0+z48+oI0cHmEA9u/kMzU/PgsdEUCl6w8cStzGleZlywSPDlS6WZiFPcKZqXPSWgHQ388fEYIJONiPyB7bS88WqDXGBw8yecpd7x0ADB+FTM0BNP3lr2rFHdRUfS348G/ObKR3/dWCvapbYdafeE5tgRjRTXZ8iybC0tlCRh/V93tNlkYxwJ9Oh6WhlwmWL+v3YDWT2005ScvrxE8vacB+XCdDwbI31suhu5eFDcRl5P/I1t2VCU5WvLv3svlOvoibus1Ml1ATxEEKHmBfhf53bTKddYaI6lHyuZJngY78w==
    properties :
     x : 369
     y : 118
     width : 230
     height : 23
     accelerator_key : 65535
     tab_order : 4
    style : {}
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
      -
        type : 338
        enabled : false
      -
        type : 339
        enabled : false
  -
    name : SAI_untilDateTime
    identifier : 0x280a08ce0531362a
    internal_properties : HgAAAB4AAADwUdvOGusnzpsJb5n6xNkBnxz7qAWwIKokhqYs9EH+vt2RQJfNw7C5FCa1FPGSTkKG2kGnRi03scOjHOjsTEQ5PX7ytXIjYdws5nC2oz8ajxSXZunBXFPW95JvGn8NWwYblSdNOb6wxt7FaLCux+vOo56i9paI284wYhbTMV+suM1UbUM0qaMwWcq5xOQ1CGLJlenK9WQlQGbb1LE9r7tEigI4L5OdxSvPfMRSCruwSzGtP7m30IZc55ThzCMX1KoGFvjWeoL/I25MAxsRhl3Kg8BA30S3L6yOS/rLIZpHigqKsOa4hiP94/rvWUvXFzKx+2+kxlVQYjR4SJ2HtoWnyqo+ZWnO6kKFxvUop+f/nPy65Z0QbAn2B1G+OdARijWdvMwKW5z2IALxRUPw+STcSdm8rUZbdwTVrRDtr49Q4iLOtzP49fzeEXLtmLMrfoFOrxgSG6qv0qq5YR/HFdV1r0URZhVE1KGdDYHI5VLI2K4beJC3d/Kkho50dKyUCKNqCXpHieT1PDnZd0Ckc+u44tHulQRPmN0csChNHDr4+Ap0/M8X1WunFNpBZBZsJbf4Yj9gS68UHhQbaJdmPvjILUV0FQhbg0oiTSqq1ltIfvcRm1v1US2DYeq3xaC8jSBP4h/M87Or9pkHAihFHnkT+ISeeHrzuRXf4P8N0JyfdgxHjcQj1GF4DZSy1rxnkzMhzQgh582mALqSr9npNUIZjp2M5sUFFf8U8skpPDnl2/dIBlW2/qe67sSYY6DdhzFIvljT6AJADdTF97tJ/c7C3wi663DGMe/M/+0GChpY7z6UbsJXUlOOaOkbQ77EiGUNyxo8/U8fZ8gsV3dta9upXxN3derlls6LjwQyl1Y9RLrSk2vmudTtfH+fgw4iaEOFAUCQUTkbaNPRP0La6GaeaPEkiQUXsxfTFVAtZowcBdrBbneWQFg2R0en0x71cNemju8NGaVC7w26bZsfXKfDT6n06wgxA3JZYXxoW3IgJBHfe9eXQ/FzXLVle3vpHbotfMhdPta6vj/V/kVWerqBc7v6UVKiDx7dLK1uqeE6OuoEa0rk4Q1/+0oVqzni/zZFijxljHCwO1uehMfzptORTBiSnL/RpVngaGVrU5wnpMKedi0sf/gQHFPezj7wN1MozW8IyOTEE5c5SzmmYddbOM++rEKCd6o+11fEKr7Y1DhwKscbU1mKPN8TeOWOph4InqX5bKn3PuOdurv3IZcP32hN/tdMR+AmMnTywl1tl18dDKmAaiucHs8UGFUFWNcDPnkLrQeFVjrMmaim09ElDY7sIdY6DgM365KfVMNYT/cpJ39YAmTsDEjP/NvHsYYV2OwZSfX+2HconMZyddPaWwONWAphf/H3JPnk5e3M1lbv7ocmwePEq8t5LbcJFvvC/h6FsNImL4Mnm5KBM6ifA6vQpwlsGi63iEIs41DAuhFg12krBnvwywSTmE+HTw5CQ1f1TmuBZZDaZe38CnRA1aZv2FdwNRuvsvZzrH9aVpiUJ3RNuHb6vOql09w1bzBNWyaS1U/Ykl9K7apPqbd4ubOwcJ4hK+AC7tfw9SnjQjCrai7IUwBnc355WdTlR+o7n+GoG6sj4B5mR+mheKqP09Oe67uNRrS6KlmWEvpX04VlSOv4mcVQsPLbQ6rLJ3xGYluAxjK128eWbxNEcyaQpo1GCPqU0Jwj8ApeINmFIOBZA+KxXvk0jac1TBDrnwampS0s9FTOk+eJRLOM+1WgXcGdZPr7ju6PgDmkCSoEJXyvicHbnf8fQCUMxNwkl0PXRsMh7dyExjz8EhdQmk5TqaxIc6i6IntJ/81UKgv4xRP11AGmA4F8n4RMibjj3gI0EUhr2Sh8drJATe6PCV3gVcHVw5KXcOCsta8U06Aaz0y1EXROJ1MdN9n8WJLqoQGkcuHLU9wtbCm2fRz1pRVCpuQV/7UQ+gnPBjvGn3E0bd8+VeJ9ts8SOA==
    properties :
     x : 603
     y : 117
     width : 230
     height : 23
     accelerator_key : 65535
     tab_order : 3
    style : {}
    type : 2
    code_elements :
     type_code : 3
     p_codes :
      -
        type : 276
        enabled : false
      -
        type : 277
        enabled : false
      -
        type : 278
        enabled : false
      -
        type : 338
        enabled : false
      -
        type : 339
        enabled : false
  -
    name : BTN_postEvents
    identifier : 0x2812318a02a93931
    internal_properties : HgAAAB4AAADRseleqSUlo9lq7DetxioJuspW7h6Sq7A2Q1Q7VproG50dJxy7vFGBu4qbptdcsOFDrDs8d/lflf/KVNItNuTSA56c6S8iNltUXEW/YBA7ExYqPREr29U5zXAVDsd8cQhX4sSE3SpANw+Pyc47JR7HY9JCo4yMo+DT062KmuOtuQ5o3Cqzl8gydVl49Dn/3q8QdmeYu36wMGDRtCtdfTiKKxmKDhPRswP5MljY177XdMeE+L88NENrPAXDAX+VxhkhA5I7c+psEDIEMo6+DASZIR+JdzT3550u8FYln7XL405zwBghUOcejzM49GjUu1tCeHe0lh8cIz6mfiTIjyEbUPRG9HPKoueEir5mswzxWFveVrORkqwGSxanpM8f0Ed1LR2oOp3gpxKqhatevOYQDHyfxzmE3sNMBaBfoOT/e/Jhnp2ZHczm2PDL7nISsBnEa1ikE7/gMIg/VfhO3SGwZ2qVbWPLoVUJhNIsYCRjGCV/r19kZFgozHx/zZ/A4FSs3PfISPcDquL+uIz09dao3BQZYA5qPnQHc51ku0YazsHBVW3P86lBC19AFf2ZT2yaSxmnzTlKjkodq4cFG2CqiyNBUr1+1GjZup4u5aP/cHxUOMh7kK01e4QFZgSN8+UqOblGgl4rTcu7HcZE2D7cMeOgdmqZp6LBCZUL7lLF0IzSPk2jkLIauHuMo8MhK8YwKDlQ4B2VyySdj1NmymZXKNjZ+e8TMb2Qt6gFtZHpg22gvNh8zgJmNee/dsM4sGTGQmDCfs06yYr1XUEm0tGUrcYacOIEQJigmVWbz9nCcqEJxS5j1yHvIgBLSfo4VD8HZxvtSUcJrXu41rLCqPGZL6fD+6c1nYqvHh51V9z1v4Cjsi+74EtVSAqjAADPB0RBhbToPxX8isw9/zsdS1YIf7dB9livsVcJ4q4RrtEAGDY+
    properties :
     x : 22
     y : 324
     width : 102
     height : 24
     visible : 0
     accelerator_key : 65535
     tab_order : 8
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         jedi est un chaine = [
         	{
             "startDateTime": "2020-06-28T11:30:00",
             "endDateTime": "2020-06-28T12:00:00",
             "patient": {
                 "id": "c-7168231",
                 "firstName": "%1",
                 "lastName": "Obama",
                 "gender": "female",
                 "birthDate": "1961-11-25",
                 "email": "barack.obama@gov.us",
                 "mobilePhoneNumber": "+41791234567",
                 "insuranceCardNumber": "80756015424001443900",
                 "address": {
                     "street": "Avenue de Sécheron",
                     "streetNumber": "15",
                     "zipCode": "1202",
                     "city": "Genève",
                     "state": "GE",
                     "country": "CH"
                 }
             },
             "appointmentType": {
                 "id": 7168231,
                 "name": "Première consultation"
             },
             "comment": "Contrôle vision et le reste"
         }
         ]
         
         demos est un tableau de 1 chaînes
         demos[1] = "Michèlle"
         
         jedi = ChaîneConstruit(jedi, demos)
         
         cMaRequête est un httpRequête
         cMaRequête.URL							= "https://onedoc.nexapi.ch/calendars/18/events"
         cMaRequête.Méthode						= httpPost
         cMaRequête.Entête["Authorization"]		= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // WINLOGIE
         cMaRequête.ContentType					= "application/json"
         cMaRequête.Contenu						= chaineVersUTF8(jedi)
         
         cMaReponse est une httpRéponse
         
         cMaReponse = HTTPEnvoie(cMaRequête)
         
         SI ErreurDétectée ALORS
         	Erreur(ErreurInfo(errComplet))
         	SINON
         		SELON cMaReponse.CodeEtat
         			CAS 201
         				idEvent is json = cMaReponse.Contenu
         				// On met à jour la table Int_doctolib
         				Trace(idEvent.id)
         			AUTRE CAS
         				Trace(cMaReponse.Contenu)
         	FIN
         FIN
        type : 18
      -
        type : 161
        enabled : false
  -
    name : BTN_SansNom2
    identifier : 0x2813a60d00d9a795
    internal_properties : HgAAAB4AAAA90sqn1XmRFkvHj73eHpgdXaYqpGG4RQn5aolNgzpjKhEAS4pkjCQCWnodJKByuU5e9flCKnT2H3fzi3qhG5o47wTxTxyeolhpoeHENye8GE8VwTtbRqOyStf4ueHnqXO+2czeHpf4RLvQqYAg6BEwb/KPfmALmHuma9C6F1P9LXrFQCctOFyezHrNyx8oqzfQx0lrwhVOrmQ2PMi86SUbXOVRAVJ7pIHMI+enxbl2UmJgDeKmq55JcHLTmJ1VSLG2YGrNbidvvm6Ym8WEMBA8Pw6nE+0auAJI7yLPRbT6eivVujCKvH3KgWe1vB6/BAnawshgJ//U0pNbZXIsKgwDUQMKMlmN2hUvlKbAVITG23LXtLzXYK1c/BViwUm9lTdKvXcdpJHTH/Nlt1yY0CRTNDTd8v2oxQg2wPdsroqqLGerBjWQhBakoQq9BCgMv3KrmPjUoU+eN4yFPUYcp07OGTJQDqH5e3UqdLT/1RoULoYX4WCUZvz9BjB6fSF/SQJin/lmtmpM3muShk+pJAEJTpRiVJSK26xgNQHW2H1LaT3bB9Zi7ZzmeYYFvt8VW1xNO74D+n7xxV5wWHKAZNx6RpUWqziTLKZQMS1ghZ5pnH2aIwfKDHxW9jGyB6zl65MpprTGNgZ1NQEsPH/HZY6+BFAuibXv5H8ov/XP/UfmJjIoOgSW4H2vCMH/tTAv4t7MZC5TD+QaO5hIgcOyYuKu1NiNj2dCvmaR9df0sf06V9eJsnTh3TM8QeKkDxsdZwKoDC622gmuIBrmWBknn4Ybzss0JJ5skxZrrliO8HS+2LAd+jgo76BKZL8Retd5D5jwM+VsyDKPCZylHVaupgkfYlctEsAU67o5hQX9PxfEJET2WYMbVIkztUYyrTl1R7h+oCLpcoC4nxx6bnEF97Joq6yBr4DISwFOoOiAaoNRhfVfkKc=
    properties :
     x : 22
     y : 477
     width : 102
     height : 24
     visible : 0
     state : 1
     accelerator_key : 65535
     tab_order : 12
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         
         jedi est un chaîne = [
         	{
         	"startDateTime": "2020-06-28T11:30:00",
         	"endDateTime": "2020-06-28T12:00:00",
         	"patient": {
         	"id": "c-7168231",
         	"firstName": "%1",
         	"lastName": "Obama",
         	"gender": "female",
         	"birthDate": "1961-11-25",
         	"email": "barack.obama@gov.us",
         	"mobilePhoneNumber": "+41791234567",
         	"insuranceCardNumber": "80756015424001443900",
         	"address": {
         	"street": "Avenue de Sécheron",
         	"streetNumber": "15",
         	"zipCode": "1202",
         	"city": "Genève",
         	"state": "GE",
         	"country": "CH"
         	}
         	},
         	"appointmentType": {
         	"id": 7168231,
         	"name": "Première consultation"
         	},
         	"comment": "Contrôle vision et le reste"
         	}
         ]
         
         demos est un tableau de 1 chaînes
         demos[1]	= "Michèlle"
         
         jedi		= ChaîneConstruit(jedi, demos)
         
         cMaRequête est un httpRequête
         cMaRequête.URL							= "https://onedoc.nexapi.ch/calendars/18/events/"
         cMaRequête.Méthode						= httpPut
         cMaRequête.Entête["Authorization"]		= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // WINLOGIE
         cMaRequête.ContentType					= "application/json"
         cMaRequête.Contenu						= ChaîneVersUTF8(jedi)
         
         cMaReponse est une httpRéponse
         
         cMaReponse = HTTPEnvoie(cMaRequête)
         Trace(cMaReponse.CodeEtat)
         SI ErreurDétectée ALORS
         	Erreur(ErreurInfo(errComplet))
         SINON
         	SELON cMaReponse.CodeEtat
         		CAS 201
         			idEvent is JSON = cMaReponse.Contenu
         			// On met à jour la table Int_doctolib
         			Trace(idEvent.id)
         		AUTRE CAS
         			Trace(cMaReponse.Contenu)
         	FIN
         FIN
        type : 18
      -
        type : 161
        enabled : false
  -
    name : BTN_SansNom3
    identifier : 0x281885ef0151331a
    internal_properties : HgAAAB4AAABya7EhFtkNPRsYoy+TP36E4+7WyxDY+YSn40xIMFdInWCNu01783GY/It49wMAyB7WGXrEvV/iVyi30BfNEQJKbCwsPKNjTZFwI5Wfd4X5J4jxnGGpec2K36042WgaihqODaLNuUL9GQb85oAM3MHW8m9bm2Qlu3w1PpID6XGhRyRX3ZmDSWq481/5YY7emsNwFdXd8eWeG9DADDIaJ9INeTP1UgsGmR1wMs/ewxIXa38XNhMXMsGR18NLHkyiMf5GZZjbvKX9zeaIIr858Lx0wnMnK48uKD/islhR9pIyMBs2nlb9XneN4bT8trE1XUEgSj9aM/t7Q5woRGMKpXEHhOCg0mVoo7jACpfSDM3OVAXw3evMiIhnHru4s8qyn3DrWJ0bZi+xmSSAzqSyg1gTMYIw6sfVVBEGUarWrGFxvuxPy2ByThkm0RldYZVwbSfwpsYw+6Yk+khPxQbKxpFm3SoQULHzrwxggFrMCbUn2pSM+j7BMbbMkPCqppS4ekthPymh0D9GDkWdvVnTumeb5TQEsVUfP8+7x8eQqnAH0y/TRjbUM2+aB8sxgJ0LoHNl5I5uFVxyev0tm+Oh6/WHyjSYbHHabU72YiMFPjGfq6RH8fKW7NxKsCep5hqBWpR/zPR4NOhdGKRujKCBPjtkefzBA0zQxs5jbaHONDXLru3Ni5xBL31X1sjwXub6fBcEUDSpfzfS6A1LS9+xXFsgJY8ZjYe2ctVLeW+9gORhSUR+EPZmyxf6b8PdhR6mcbGpmFcFd8bjWm1WR5F1VRpWVnnV/9HX0HgvqqNrH5Er7VKtjeYYJNV3Bf0g7hYQpX59KdnEShjt51ezLWff3xBV5MwZew4yhrxPZgQjKPLN38hYNP3bJJuTzXteA2kZgqMTB9x4K1bd05691pRjSrx280lDRcSsTP2QeA==
    properties :
     x : 22
     y : 512
     width : 102
     height : 24
     visible : 0
     accelerator_key : 65535
     tab_order : 13
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1-
         eventId is string = "6809e080ea212be4be400ca6"
         
         cMaRequête is httpRequest
         cMaRequête.URL							= "https://onedoc.nexapi.ch/calendars/18/events/" + eventId
         cMaRequête.Method						= httpGet
         cMaRequête.Header["Authorization"]		= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // WINLOGIE
         cMaRequête.ContentType					= "application/json"
         cMaRequête.Header["Accept-Encoding"]	= "identity"
         //cMaRequête.ProcédureTrace = ProcTrace
         cMaRéponse is httpResponse = HTTPSend(cMaRequête)
         
         if ErrorOccurred then
         	Error(ErrorInfo(errFullDetails))
         else
         	switch cMaRéponse.StatusCode
         		case 200
         			fic_cleunik is int
         			eventWithPatient	is JSON	= cMaRéponse.Content
         			REQ_checkIfPatientExists._nom		= Upper(eventWithPatient.patient.lastName)
         			REQ_checkIfPatientExists._prenom		= Upper(eventWithPatient.patient.firstName)
         			REQ_checkIfPatientExists._datnais	= StringDelete(eventWithPatient.patient.birthDate,"-")
         
         			if HExecuteQuery(REQ_checkIfPatientExists, hCheckIntegrity + hCheckDuplicates) = False then
         				Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         				return
         			else
         				switch REQ_checkIfPatientExists.FICLEUNIK
         					case 0:
         
         						// --------------------------------------------------- IL N'EXISTE PAS DONC ON INSERT LE PATIENT
         						REQ_createPatient.nom = Upper(eventWithPatient.patient.lastName)
         						REQ_createPatient.prenom = Upper(eventWithPatient.patient.firstName)
         						REQ_createPatient.datnais = StringDelete(eventWithPatient.patient.birthDate, "-")
         						REQ_createPatient.sexe = eventWithPatient.patient.gender = "male"? "M" else "F"
         						REQ_createPatient.email = eventWithPatient.patient.email
         						REQ_createPatient.tel_port = eventWithPatient.patient.mobilePhoneNumber
         						REQ_createPatient.adresse = eventWithPatient.patient.address.street + " " + eventWithPatient.patient.address.streetNumber
         						REQ_createPatient.cdpost = eventWithPatient.patient.address.zipCode
         						REQ_createPatient.ville = eventWithPatient.patient.address.city
         
         						if HExecuteQuery(REQ_createPatient, hCheckIntegrity + hCheckDuplicates) = False then
         							Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         							return
         						else
         							fic_cleunik = SQL.IDAuto
         						end
         					case <> 0:
         						fic_cleunik = REQ_checkIfPatientExists.FICLEUNIK
         				end
         			end
         
         			// --------------------------------------------------------------- INSERT DU RDV
         
         			Prat is int	= 18
         			HChangeDir("RDV", "Prat" + Prat)
         
         			UNIC	is string	= NumToString(Val(fic_cleunik),"010d")+Left(Replace(eventWithPatient.startDateTime,["-","T",":"],""),12)
         			HDEB	is time		= StringToTime(Right(eventWithPatient.startDateTime,8))
         			HFIN	is time		= StringToTime(Right(eventWithPatient.endDateTime,8))
         			CADATE	is Date		= StringDelete(eventWithPatient.startDateTime,"-")
         
         			REQ_checkIfAppointmentExists.UNIC = UNIC
         
         			if HExecuteQuery(REQ_checkIfAppointmentExists) = False then
         				Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         				return
         			else
         
         				switch REQ_checkIfAppointmentExists.RDCLEUNIK
         					case 0:
         
         						// ------------------------------- IL N'EXISTE PAS DONC ON INSERT LE RDV
         						REQ_insertAppointment.FICLEUNIK		= fic_cleunik
         						REQ_insertAppointment.NOM			= Upper(eventWithPatient.patient.lastName)
         						REQ_insertAppointment.PRENOM		= Upper(eventWithPatient.patient.firstName)
         						REQ_insertAppointment.RAISRDV		= ""
         						REQ_insertAppointment.CADATE		= CADATE
         						REQ_insertAppointment.HDEB			= HDEB
         						REQ_insertAppointment.TYPRDV		= "Médical"
         						REQ_insertAppointment.HFIN			= HFIN
         						REQ_insertAppointment.DUREE			= IntegerToTime(Abs(TimeDifference(HDEB, HFIN)))
         						REQ_insertAppointment.LIEU			= 1
         						REQ_insertAppointment.ABSENCE		= 2
         						REQ_insertAppointment.CLEINTERV		= Prat
         						REQ_insertAppointment.CODEPRAT		= Prat
         						REQ_insertAppointment.FORMTET		= "ONEDOC"
         						REQ_insertAppointment.UNIC			= UNIC
         
         						if HExecuteQuery(REQ_insertAppointment, hCheckDuplicates) = False then
         							Error("Erreur d'initialisation de la requête" + CR + HErrorInfo())
         							return
         						else
         							Trace(SQL.IDauto + " " + eventWithPatient.id )
         							// On met à jour le RDV là-haut
         							// PATCH???
         							// ET ON SUPPRIME LE CHANGES????
         						end
         					other case
         						Trace("Le RDV existe déjà")
         				end
         			end
         		other case
         			Trace(cMaRéponse.StatusCode)
         	end
         end
        type : 18
      -
        type : 161
        enabled : false
  -
    name : BTN_SansNom4
    identifier : 0x2818911905f9ceec
    internal_properties : HgAAAB4AAAAEFUW1dzW4Qh42ILUxkoTWQmii7kzaRPIb2oGUZtOCN62jPCP0/a4d1Gnjp9fllPhXpHLyoqH0frGRi0QkSkK0gwYLmhwA9Yo/67rU/lAjf7LuUGMJQIAhqLI6qmpeHmSMNLMDXVc7Cw9K1n3mfWGACXYxpDrlPQgq357A3nWLRKD2+FGMp8QPtPrPCCjnM14m854bbqKzFNWWBZNNG9eLr0eAkQvRoLuWN+gBy0YcnQAcMfGbMJzvHB7796EYH0pJ7eHmGlv5/Jwp+AZBap2g6rwqTl0N9ThzzzLyR7ce+15PfzmJ3M/RYfegh5qNxlU5c3LtMaWY6s5WdykmcxRoa3cJKOS+vzBc+8050sP59AkD0EYPl+7jnZbWGAF8PLkFWm4swGIrTVSQIHi9kBZOp2j3URC16Jl+9NL+xAk5Jrmnog/C3qqoVT0zuyU98bmBusVcs/6HUbZiMxkUL4O/M5YVn686vMa86HnoZoaBj8ZOkdsRxP2gJjaJhOkZ7sp753r0OkiVkAGpjotijfkiaVTDpuVcrBGvraR4gw3TPgU1qQ98lnCs7+cUku5Q1sC/RBcppy19WlfnikE08k0MzDwDPcOl4jokEt5FW45VgG75bGuGESli0tuUdu8uyn1jzgFPQqe64Oa2LfLUEW8hgZCgkMBxk/wje9YeUVrZtXlv0llZhCKBijrJMv+LXmr8qLumUdARTjUjCJUoZ1F5YUXcHmtHUfHZNxJNa4OtSqjefVWGSc1hxJea+/lFjVZTwv66r3FCFK0wCtNaxtgbDrscNI9uoVCRu4zOX5+GS5SMEw+MwFLr1Vas/WT6Ezun0/ghxSihqmly5+iu53t+nMSZAsjFfL7A3/LadXALGE0+kLq3KGKv9f/LmpbN1fewqYfB7PEp1OHgc3s4sh+hi1LdvkumwczZKqURpelT
    properties :
     x : 22
     y : 436
     width : 102
     height : 24
     visible : 0
     accelerator_key : 65535
     tab_order : 11
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         cMaRequête is httpRequest
         cMaRequête.URL							= "https://onedoc.nexapi.ch/calendars/18/events/68131c0a5de07023688bd74d"
         cMaRequête.Method						= httpGet
         cMaRequête.Header["Authorization"]		= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // WINLOGIE
         cMaRequête.ContentType					= "application/json"
         cMaRequête.Header["Accept-Encoding"]	= "identity"
         //cMaRequête.ProcédureTrace = ProcTrace
         cMaRéponse is httpResponse = HTTPSend(cMaRequête)
         
         if ErrorOccurred then
         	Error(ErrorInfo(errFullDetails))
         else
         	switch cMaRéponse.StatusCode
         		case 200
         			eventWithPatient	is JSON	= cMaRéponse.Content
         			Trace(eventWithPatient.patient.lastName)
         		other case
         			Trace(cMaRéponse.StatusCode)
         	end
         
         	//	i, j	est un entier
         	//	jsevents		est un JSON	= cMaRéponse.Contenu
         	//	j = jsevents..Occurrence
         	//
         	//	POUR i = 1 A j
         	//		Trace(jsevents[i])
         	//	FIN
         	//Trace(JSONVersChaîne(js,psdMiseEnForme))
         
         	//	Trace(cMaRéponse.CodeEtat)
         	//	Trace(cMaRéponse.DescriptionCodeEtat)
         	//	Trace(cMaRéponse.ContentType)
         	//	Trace(cMaRéponse.EntêteBrut)
         end
        type : 18
      -
        type : 161
        enabled : false
  -
    name : BTN_SansNom5
    identifier : 0x2818ec5a2d874428
    internal_properties : HgAAAB4AAADWllEkr3DbRxoa8cvGRVdgqLlXmtfjWWmCEWBFKlNiJwsB1U3vXiM6Gd3E6l5efaJGO9mqPjQJDf7gihglkfOJCnUCLiye3aK8Ba28+t+NMYxmbN8VXXQIvbfw+8PVbCwF7XSQUnqub6unQzMi19M3p3ZGyPnra71KCeIWwCbvBc3MFmOZhAe8HYcb6C/Hqy9J4TIrb6odanAjLqeUJeJAi3dtujhxmyr78tWwoJQNJrqDt3yalB2geK6lFRRkJA3baZ05XIDWf++dr/DbrYXkACC2pHQAfw+TeTe/qqdaiQ0D+APUIGk5A6UEXvAwtISysGOjQdOQuwngaUVXHY98mSMlGKsfOaVPb9S04/IBDMSh2KXRo0w8YOZl54uEazXGdfsmSb+iwcNUu1eI36rsbfENHcURUJT3XupAqe+mW5bOlBkHbMdHPi4aDShPsqkpNwhsjFHzFWGjcbRnxoK+7I0wX7VRqT/JRSIkvKk43hPzMtfDadQ5q/sSnoW4U4cqdLP+Knumx2yGJ6c8iOLNZmms4LlZeabs2Fu0tW4cKfqCKrO6+wM9GBzVJHa7B/cAPyatYaoEifICmV3+BUJDueOeT69Cg2OJ+xstZQH6yY1EG6foMCR9xR5DLEdjF8bG+SDryNYLTfchhNjg6Gom6Ek9ZrgGXs2UXAOc1YXEQI7GRft1VetsNbue2As+ZU8vx36+S4EEpyYGb1P8+uiS5GT3NgGCSCa+HDOxTYZYlbkzBrmYaxmd0LJRSSWeKM/2L3cGYWoVYeqzSRf879cs1O/UT4QOkw6PDOlBIwR/iGfslkJBbyjF8Ai30T4hG9018Vo46RGIE5Wbh3l4viT6mD82d4c/YQU811r0EPMGq3/D5G7hLJ6VxV1dh56VuxXzI4CLF2zrDsq1Ib17iuHGbWCeWTCKzQ==
    properties :
     x : 22
     y : 365
     width : 102
     height : 24
     visible : 0
     accelerator_key : 65535
     tab_order : 9
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        code : |1+
         // sCheminRegistre	is string					// chemin proposée dans la base de registres					// valeur lue dans la base de registres
         // ResExiste		is boolean					// Test de l'opération de lecture
         
         // On récupère le chemin dans la base de registres proposé par WINDEV
         
         ResExiste		= RegistryExist(sCheminRegistre)
         Trace(sCheminRegistre)
         
         IF ErrorOccurred THEN
         	Error(<§$0000§>,ErrorInfo())
         	RETURN
         END
         
         IF ResExiste = False THEN
         	// La clé n'existe pas, alors on la créée
         	RegistreCréeClé(sCheminRegistre)
         	// Vérification de l'opération
         	SI ErreurDétectée ALORS
         		Erreur("Une erreur est survenue pendant la création de la clé ""lastChangeID""",ErreurInfo())
         		RETOUR
         	FIN
         END
         
         
        type : 18
      -
        type : 161
        enabled : false
  -
    name : BTN_Ecrire
    identifier : 0x282195de03adfd84
    internal_properties : HgAAAB4AAAD6nuMN56IFNiX9+yUVDo5/B7VgmkZPv6iyU8JxQXuw1oY4IuAB2KUUufKQD8C91Dmtor9dR+Ur9cuc0H39Uc5wL9ifAdOgb+CFQb228V9Xks5oUvosddoGOBJKHwbH8Xoep9tReTQSpza0NESU3OuEeE0dRhVt8ZVKCZGnkqVFLGs+dahaYfhK5Ia/jqW6b51jHmLhnOZNKN3Us83bIHkdCUF+ayFmvgOcgU2v8AraP9NvNuuBJKodGIcPDYUOJAnSj+5caXK9csJuXnyUQBez7RBJ2xKEuwbE64DDtE86IxkYGFXZ5lE3DsjG2321+TPDnAHwWqfgzzLIM8DWwnzMOGurc6WUilrJ4VnNhZPOV+hD0cOkSYX1C3AsM4/EalVBFkWmuOHELPRbk48KnvGYl2qtdxGt4NgzkDDt1ArYBoC3b7P5NATOQFrBDZpdMZk6MZZ5h6BAVgjiluLm/lcMLD/KqXmEPkIhb1L3xO9TDy6YWoa/F5z7EwimFJNoXuAby+LR+7Gxzf0NLL8ClzVParcv+m7aZ6FscDyPGf/cVA07Gs52jbBXQ/HVOGdFu3YTdFh4eRTNLc0pwaFRL2rUZmZCHgF+VLFcJF9lWJMZH5XwAMgIhn2fioeYWsD/xlDy063DzRNv2MR25hqbGIwtq4N/MeSsZ8uDQ9N4BgHoB7XLVbcK+oOpowl1LEppW4OEp6WbVY9rEUGaCmwk+9dez+zeMu3CGQxM/Ub3IGww+01holK2r6yRQ4y3C8+cHc9nDay21piQefVEWgxeEVvZG+0YiUeZqja68zjFVMBJhKgTM7XCbEZGdHfw0/+0Fg3yVGPqVWud8aeKHIgZQ9zekpM4sku5cgp8HgxgD0XUcY9L
    properties :
     x : 22
     y : 406
     width : 102
     height : 24
     visible : 0
     accelerator_key : 65535
     tab_order : 10
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        internal_properties : HgAAAB4AAADrzfNZj3j81ybkJY7ilcRtj9EA0kBdrTEDbXR0f4z5UefKCDz95kUddoXj+gg26wTtGOjoBh7rD+taQXIDzalJgISdyKQFne9NV4MZcZdI08KZdUxJJE++td2y2Z7Kfm3sCMzFAwzf9Z0214w=
        code : |1-
         
         			// chemin proposée dans la base de registres
         
         // On récupère le chemin dans la base de registres proposé par WINDEV
         
         
         // Ecriture dans la clé "Test" de la valeur "mon test" dans "variable chaîne"
         RegistreEcrit(sCheminRegistre,"changeId",197,registreTypeEntier)
         
         // Vérification de l'opération
         SI ErreurDétectée ALORS
         	Erreur(<§$0001§>,ErreurInfo())
         	RETOUR
         FIN
         
         // On affiche l'information à l'utilisateur
         Info(<§$0004§>+<§$0003§>+sCheminRegistre+<§$0002§>)
        type : 18
      -
        type : 161
        enabled : false
  -
    name : BTN_Lire
    identifier : 0x2821964703af9877
    internal_properties : HgAAAB4AAADd2OOY3tCLgsNFngdXSmYMLcDnfcpOuoa/D4+N57OynkxaU9oK6FaeVuxX2INn0PIruSGIG4hheyxY1gGATIBJ3B/jApinV2vF6QzvQ2O9+3wjseWmZSvZA0p1zuS99P9Gk976wMEohe7I7fSf2lhyWGeUfPRbr/5luqkXgKZtRfESZ7Rt2tqg/lUYwEl3EEK3i1gRf/4ej1MPGa3EQxXs11HhGDUUzsK7tvcEdkM1+3eQfqRxbIb5fO8r8nhXM3JphA7c1zicRC44RfhqCwik9oRqlzIxr0P7Hi3ByNEfCS7bnjhbiyiUqYYIuhDaVWXpPA8d55uE5CYn8OgW1yCdMjBFYmAqUPC/FYL2rfzdJmNSEcrb6QYMamnGmmeKwyXo7+aL8MmMIRkHtIgDsgQbmpjSOUso2pOSsrdT8GGjJLq+A4K8hvTfCdrMAQO7WpPH3IEXPEhRoiTBVb9xfSDBg1KElFsZ4BK5nAKZwR2uSoenyY/SNtUknw2XKx2IZtheTtT+cgAhI11y5mqai8Pvup6C802XnZZUlv4J5jRzh0jicjbKNW1ZhrAVlf441Wv2Fz9dQgqdIyZfr2omZkDbA9cZmlHHwg1k8Ffni2XGXU38VfA97VoIxvYEpH0IaH4ZwOBsaHCgP2KClDGjkmkvx8qB5AS8UT4FMKZ9DhYYxw4/BXKPAETV6UUl0IY4mAOivFbmAgAQdlbxAD/sWSORxG5cT1zYEqsuSbIMq9gh0ucrFFm+IN/0hmv9Jf3qJLVO72lQJSGYK2wK2xeuiXdL57zwXvp/FefiwUITuwnXW9GTHdq18NuQyTC0RvI0KtmjU7k/MlvkZRtYeYcuIoKmqZxQjv5W9krOANK51hpDp6pTMypvuiRUGTU=
    properties :
     x : 22
     y : 160
     width : 102
     height : 24
     accelerator_key : 65535
     tab_order : 7
    style : {}
    type : 4
    code_elements :
     type_code : 4
     p_codes :
      -
        internal_properties : HgAAAB4AAADrzfNZj3j81ybkJY7ilcRtj9EA0kBdrTEDbXR0f4z5UefKCDz95kUddoXj+gg26wTtGOjoBh7rD+taQXIDzalJgISdyKQFne9NV4MZcZdI08KZdUxJJE++td2y2Z7Kfm3sCMzFAwzf9Z0214w=
        code : |1+
         
         			// chemin proposée dans la base de registres
         sValeurLue est une chaîne				// valeur lue dans la base de registres
         bTestLecture est un booléen				// Test de l'opération de lecture
         
         
         // Ecriture dans la clé "Test" de la valeur "mon test" dans "variable chaîne"
         sValeurLue = RegistreLit(sCheminRegistre,"changeId",bTestLecture)
         
         // Vérification de l'opération
         SI ErreurDétectée ALORS
         	Erreur(<§$0005§>,ErreurInfo())
         	RETOUR
         FIN
         
         SI bTestLecture ALORS
         	// On affiche l'information à l'utilisateur
         	Info(<§$0006§>+sValeurLue)
         SINON
         	// La lecture ne s'est pas faites
         	Info(<§$0008§>,<§$0007§>)
         FIN
         
        type : 18
      -
        type : 161
        enabled : false
 menu :
  name : _Menu
  identifier : 0x292573e513b5f221
  internal_properties : HgAAAB4AAACMuVl/B9yNsBT7gB12Q5cW52ruGkd0XkDXwSvmNKsS4txGO9bvn7lPzxv9eEczeV0RL5jK6s/OynUJF4nDNzoht7UWeSwqPX/HoxzJRW9KXun3asFOJqgrEqD5PADt73+nhSzRYVXMTU/zm3r/HfVetfhJBgUU4XoOs/P/OGM3soEhyuSL/sBJNYQvHyCYDS2HZ4mIOBPF8Ehg2cD6qxNzxgTsdGNnUNZPWfGkHvgtAcv/0/yyRRCx7ZepeyUkhsK67wR2PJlNNx4opr+4UrdtE7lPFXnBkQNjG18++6w=
  properties : {}
  style : {}
  options : []
 languages :
  - fr-FR
 popup_menus : []
 message_bar :
  internal_properties : HgAAAB4AAAAjFWXItEk/EPvcbGR+hALkgRfdOpVtIn+yZNxHnmSRFJegE/AnD2HbGAaMfhGCqfzkryHG9FVhjtF+iQYkZ59QBQ88Okhh0vjCoVhOagox2hvIqrJnU30QK15/ZA==
 actionbar : {}
 code_elements :
  type_code : 1
  p_codes :
   -
     code : |1+
      PROCEDURE MaFenêtre()
   -
     code : |1+
      
      
     type : 34
   -
     code : |1+
      
      
     type : 234
   -
     code : |1+
      
      
     type : 165
   -
     code : |1+
      
      
     type : 177
   -
     type : 180
     enabled : false
   -
     type : 230
     enabled : false
   -
     code : |1+
      
      
     type : 2
  procedures :
   -
     name : ProcTrace
     procedure_id : 1732229588321079788
     type_code : 14
     code : |1+
      procédure ProcTrace(nTypeInfo est entier, ...
      bufByData est un Buffer)
      SELON nTypeInfo
      	CAS httpTraceEntêteEnvoyé:
      		Trace("Entete : ", ...
      		UTF8VersChaîne(bufByData))
      	CAS httpTraceDonnéeEnvoyée:
      		Trace("Donnees : ", ...
      		bufByData)
      	CAS httpTraceEntêteRecu:
      		Trace("Entête reçu : " + Remplace(UTF8VersChaîne(bufByData),RC,""))
      	CAS httpTraceDonnéeRecue:
      		Trace("Données reçues : " + Taille(bufByData))
      FIN
      
     type : 458752
   -
     name : getRequest
     procedure_id : 1737070269849788858
     type_code : 14
     code : |1-
      //!
      //! @brief <indiquez ici ce que fait la procédure>
      //!
      //! @param _route  route  routes  <indiquez ici le rôle de routes>
      //!
      //! @return (httpRéponse)  <indiquez ici les valeurs possibles ainsi que leur interprétation>
      //!
      //!
      
      procédure getRequest(_route)
      
      cMaRequête is httpRequest
      cMaRequête.URL						= "https://onedoc.nexapi.ch" + _route //"https://onedoc.nexapi.ch/events/changes?afterChangeId=" + SAI_afterChangeId
      cMaRequête.Header["Authorization"]	= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // TOKEN WINLOGIE
      
      cMaRéponse is httpResponse = HTTPSend(cMaRequête)
      jsResult est un JSON = cMaRéponse.Contenu
      
      RETOUR cMaRéponse
     type : 458752
   -
     name : postRequest
     procedure_id : 1737482586780318200
     type_code : 14
     code : |1+
      //!
      //! @brief <indiquez ici ce que fait la procédure>
      //!
      //! @param _route  route  <indiquez ici le rôle de route>
      //! @param body  <indiquez ici le rôle de body>
      //!
      //! @return (httpRéponse)  <indiquez ici les valeurs possibles ainsi que leur interprétation>
      //!
      //!
      
      procédure postRequest(_route, body)
      
      cMaRequête is httpRequest
      cMaRequête.Méthode					= httpPost
      cMaRequête.URL						= "https://onedoc.nexapi.ch" + _route
      cMaRequête.Header["Authorization"]	= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // TOKEN WINLOGIE
      cMaRequête.ContentType				= typeMimeJSON
      cMaRequête.Contenu					= ChaîneVersUTF8(body)
      //cMaRequête.ProcédureTrace			= ProcTrace
      cMaRéponse	is httpResponse			= HTTPSend(cMaRequête)
      
      RETOUR cMaRéponse
      
     type : 458752
   -
     name : deleteRequest
     procedure_id : 1738616376608211517
     type_code : 14
     code : |1+
      //!
      //! @brief <indiquez ici ce que fait la procédure>
      //!
      //! @param _route  route  <indiquez ici le rôle de route>
      //!
      //! @return (httpRéponse)  <indiquez ici les valeurs possibles ainsi que leur interprétation>
      //!
      //!
      
      procédure deleteRequest(_route)
      cMaRequête is httpRequest
      cMaRequête.Méthode					= httpDelete
      cMaRequête.URL						= "https://onedoc.nexapi.ch" + _route //"https://onedoc.nexapi.ch/events/changes?afterChangeId=" + SAI_afterChangeId
      cMaRequête.Header["Authorization"]	= "Basic d2lubG9naWU6UGFzczR3aW5sb2dpZQ==" // TOKEN WINLOGIE
      
      cMaRéponse	is httpResponse	= HTTPSend(cMaRequête)
      jsResult	est un JSON		= cMaRéponse.Contenu
      
      RETOUR cMaRéponse
      
     type : 458752
   -
     name : clickChanges
     internal_properties : HgAAAB4AAABwml5VVtToiOQX4JGW3Mxxok47AfGHodyTaw2Ge5It5zttgwRsuaDrY1uQY8z7pD3ZRdMmJeERAN1B2Vod+EDG7nSCzdx8lzcXQe1T0NEZTiV2tmE1FgYmTzkx
     procedure_id : 1742287598670413436
     type_code : 14
     code : |1+
      // Procédure automatique :
      // La procédure est exécutée automatiquement, après le code d'initialisation de la fenêtre, avec un différé de 15 secondes
      // Elle sera répétée en boucle, en attendant 30 secondes entre chaque appel
      // Chaque appel suivant exécute une seule fois la procédure, sans timer
      //
      
      procédure clickChanges()
      	ExécuteTraitement(BTN_changes,trtClic)
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : HgAAAB4AAACEeedg5dLJphC9DHQRgJ0gwS0ZJSrtQCmlS6JGOuTjLkALfFcXzI9jV+AM+8JkFyzqtpQ0zgsHoWqhgXstNKne9Trtwbls8+6IlWtvg6eD+FHV
  original_name : Modele1
resources :
 string_res :
  identifier : 0x180a00b20003889b
  internal_properties : HgAAAB4AAACmmCBE6pK3aBIm7vNkoGz9dsYQFTmVvb3ue+HorlsuKCCauicTtQW6CVSeGnhPb22ttQ==
  strings :
   -
     text :
      fr-FR : Une erreur est survenue pendant la lecture de la valeur
     index : 0
   -
     text :
      fr-FR : Une erreur est survenue pendant l'écriture dans la valeur
     index : 1
   -
     text :
      fr-FR : "\" de la base de registres"
     index : 2
   -
     text :
      fr-FR : " a bien été créée dans la valeur \"Test\" de la clé :\" "
     index : 3
   -
     text :
      fr-FR : La valeur "mon test"
     index : 4
   -
     text :
      fr-FR : Une erreur est survenue pendant la lecture de la valeur
     index : 5
   -
     text :
      fr-FR : "La valeur lue est : "
     index : 6
   -
     text :
      fr-FR : (vérifiez que la clé existe)
     index : 7
   -
     text :
      fr-FR : La valeur n'a pas été lue
     index : 8
custom_note :
 internal_properties : HgAAAB4AAAC68/W0/adbG0nFCRhrE42B5HRnbDzVHaz86sSQyxlBk7I=
rad :
 internal_properties : HgAAAB4AAABoAN7PLpwJW3EiA7WVZdCA5EwrCA1rvutcDHooMWKe
